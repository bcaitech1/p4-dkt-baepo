{"version":3,"sources":["components/Navigation/Navigation.js","routes/Home/MenuItem.js","routes/Home/HoverItem.js","routes/Home/MenuLists.js","routes/Home/Home.js","routes/Analysis/Analysis.js","routes/Crews/Crews.js","routes/Eda/Eda.js","routes/Model/Model.js","routes/Task/Task.js","App.js","index.js"],"names":["Navigation","className","to","href","target","MenuItem","name","category","title","sub_info","HoverItem","MenuLists","Home","MenuComponents","map","menu","index","splice","Analysis","accuracy","auroc","lgbm_plot","zero_one","console","log","Crews","Eda","dotenv","config","Model","props","getModelScore","a","inputFile","state","axios","post","process","REACT_APP_SERVER","params","data","score","setState","infScore","undefined","isLoading","modelInference","bind","this","alert","htmlFor","id","type","accept","onChange","event","files","onClick","accuracy_score","prediction","roc_auc_score","lgbm_plot_importance","zero_one_distribution","React","Component","Task","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mSAiCeA,EA5BI,WACjB,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,YAAvB,wBAGA,sBAAKA,UAAU,aAAf,UACE,eAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,aAA5B,kBAEE,cAAC,IAAD,CAAgBA,UAAU,kBAE5B,eAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,aAA5B,kBAEE,cAAC,IAAD,CAAgBA,UAAU,kBAE5B,oBACEE,KAAK,kDACLF,UAAU,gBACVG,OAAO,QAHT,sBAME,cAAC,IAAD,CAAgBH,UAAU,yBCZrBI,G,MAVE,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACzC,OACE,eAAC,IAAD,CAAMP,GAAE,WAAMI,GAAQL,UAAS,gBAAWK,GAA1C,UACE,oBAAIL,UAAU,WAAd,SAA0BM,IAC1B,qBAAKN,UAAU,QAAf,SAAwBO,IACxB,qBAAKP,UAAU,WAAf,SAA2BQ,SCkBlBC,EAvBG,WAChB,OACE,sBAAKT,UAAU,cAAf,UACE,qBAAKA,UAAU,iBAAf,sBACA,sBAAKA,UAAU,WAAf,UACE,oBAAIA,UAAU,4BAAd,+BACA,oBAAGA,UAAU,aAAb,yDAEE,uBAFF,4CAIE,uBAJF,sGAME,uBANF,uHAQE,uBARF,oHASyB,uBATzB,+ECkBOU,EA3BG,CAChB,CACEL,KAAM,QACNC,SAAU,eACVC,MAAO,aACPC,SAAU,gBAEZ,CACEH,KAAM,OACNC,SAAU,WACVC,MAAO,gBACPC,SAAU,gBAEZ,CACEH,KAAM,MACNC,SAAU,YACVC,MAAO,WACPC,SAAU,YAEZ,CACEH,KAAM,QACNC,SAAU,WACVC,MAAO,mBACPC,SAAU,aCMCG,EAxBF,WAEX,IAAIC,EAAiBF,EAAUG,KAAI,SAACC,EAAMC,GAAP,OACjC,oBAAIf,UAAU,aAAd,SACE,cAAC,EAAD,CACEK,KAAMS,EAAKT,KACXC,SAAUQ,EAAKR,SACfC,MAAOO,EAAKP,MACZC,SAAUM,EAAKN,YALaO,MAkBlC,OARAH,EAAeI,OACb,EACA,EACA,oBAAIhB,UAAU,qBAAd,SACE,cAAC,EAAD,MADuC,IAKpC,oBAAIA,UAAU,cAAd,SAA6BY,KChBvBK,EARE,SAACC,EAAUC,EAAOC,EAAWC,GAK5C,OAJAC,QAAQC,IAAIL,GACZI,QAAQC,IAAIJ,GACZG,QAAQC,IAAIH,GACZE,QAAQC,IAAIF,GACL,sDCDMG,G,MAJD,WACZ,OAAO,oDCEMC,EAJH,WACV,OAAO,iD,yGCGTC,IAAOC,S,IA+FQC,E,kDA5Fb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAYRC,cAbmB,sBAaH,8BAAAC,EAAA,6DACNC,EAAc,EAAKC,MAAnBD,UADM,SAEME,IAAMC,KACxBC,gJAAYC,iBAAmB,aAC/B,CACEC,OAAQ,CACNC,KAAMP,KANE,OAERQ,EAFQ,OAUd,EAAKC,SAAS,CAAEC,SAAUF,IAVZ,2CAXd,EAAKP,MAAQ,CACXD,eAAWW,EACXD,cAAUC,EACVC,WAAW,GAIb,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKhB,cAAgB,EAAKA,cAAcgB,KAAnB,gBAVJ,E,kDA0BnB,gBAGoBH,IADII,KAAKd,MAAnBD,UAENgB,MAAM,iCAEND,KAAKN,SAAS,CAAEG,WAAW,IAC3BG,KAAKjB,mB,oBAIT,WAAU,IAAD,SACyBiB,KAAKd,MAA7BW,EADD,EACCA,UAAWF,EADZ,EACYA,SAMnB,GALApB,QAAQC,IAAI,kBAKM,IAAdqB,EACF,OACE,sBAAK5C,UAAU,cAAf,UACE,uBAAOA,UAAU,aAAaiD,QAAQ,OAAtC,uCAGA,uBACEC,GAAG,OACHlD,UAAU,aACVmD,KAAK,OACLC,OAAO,OACPC,SAAU,SAACC,GACT,EAAKb,SAAS,CACZT,UAAWsB,EAAMnD,OAAOoD,MAAM,QAIpC,wBAAQC,QAAST,KAAKF,eAAtB,sCAKJ,QAAiBF,IAAbD,EACF,OAAO,6CAIPpB,QAAQC,IAAIwB,KAAKd,MAAMS,UAHlB,MAUDK,KAAKd,MAAMS,SAJbe,GANG,EAKHC,WALG,EAMHD,gBACAE,EAPG,EAOHA,cACAC,EARG,EAQHA,qBACAC,EATG,EASHA,sBAEF,OACE,cAAC,EAAD,CACE3C,SAAUuC,EACVtC,MAAOwC,EACPvC,UAAWwC,EACXvC,SAAUwC,Q,GArFFC,IAAMC,WCDXC,EAJF,SAACnC,GAEZ,OADAP,QAAQC,IAAIM,GACL,kDCqBMoC,EApBH,WACV,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,qBAAKjE,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOkE,KAAK,IAAIC,OAAK,EAACC,UAAWzD,IACjC,cAAC,IAAD,CAAOuD,KAAK,SAASE,UAAW5C,IAChC,cAAC,IAAD,CAAO0C,KAAK,QAAQE,UAAWJ,IAC/B,cAAC,IAAD,CAAOE,KAAK,OAAOE,UAAW3C,IAC9B,cAAC,IAAD,CAAOyC,KAAK,SAASE,UAAWxC,IAChC,cAAC,IAAD,CAAOsC,KAAK,YAAYE,UAAWnD,IAEnC,cAAC,IAAD,CAAUiD,KAAK,IAAIjE,GAAG,eCfhCoE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.45d9548d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BsArrowUpRight } from \"react-icons/bs\";\r\nimport \"./Navigation.css\";\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <nav className=\"nav\">\r\n      <Link to=\"/\" className=\"nav__home\">\r\n        Team Baepo\r\n      </Link>\r\n      <div className=\"nav__items\">\r\n        <Link to=\"/crews\" className=\"nav__crews\">\r\n          Crews\r\n          <BsArrowUpRight className=\"nav__arrow\"></BsArrowUpRight>\r\n        </Link>\r\n        <Link to=\"/model\" className=\"nav__model\">\r\n          Model\r\n          <BsArrowUpRight className=\"nav__arrow\"></BsArrowUpRight>\r\n        </Link>\r\n        <a\r\n          href=\"https://boostcamp.connect.or.kr/program_ai.html\"\r\n          className=\"nav__bcaitech\"\r\n          target=\"blank\"\r\n        >\r\n          boostcamp\r\n          <BsArrowUpRight className=\"nav__arrow\"></BsArrowUpRight>\r\n        </a>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","// 메뉴의 항목을 구성하는 컴포넌트입니다.\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst MenuItem = ({ name, category, title, sub_info }) => {\r\n  return (\r\n    <Link to={`/${name}`} className={`menu__${name}`}>\r\n      <em className=\"category\">{category}</em>\r\n      <div className=\"title\">{title}</div>\r\n      <div className=\"sub_info\">{sub_info}</div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default MenuItem;\r\n","// mouse hover 이벤트가 있는 메뉴 컴포넌트입니다.\r\n// hover 이벤트 컴포넌트가 또 필요할 경우 좀더 재사용성을 고려하여 리팩토링하면 될 것 같습니다.\r\nimport React from \"react\";\r\n\r\nconst HoverItem = () => {\r\n  return (\r\n    <div className=\"menu__about\">\r\n      <div className=\"title ft_white\">About us</div>\r\n      <div className=\"box_info\">\r\n        <em className=\"category ft_white ft_bold\">Team Baepo는?</em>\r\n        <p className=\"hover_text\">\r\n          저희는 boostcamp AI Tech 1기\r\n          <br />\r\n          Team Baepo 입니다🔥\r\n          <br />\r\n          P stage 4 DKT task를 진행하면서 서비스화 한다는\r\n          <br />\r\n          마음가짐으로 프로젝트를 진행했습니다🌱\r\n          <br />\r\n          프로젝트의 상세한 내용은 파트별로 나누어 <br />\r\n          담아보았습니다🙌🏼\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HoverItem;\r\n","// 메뉴로 구성될 항목들을 모아둔 배열입니다.\r\nconst MenuLists = [\r\n  {\r\n    name: \"crews\",\r\n    category: \"Introduction\",\r\n    title: \"Crew Intro\",\r\n    sub_info: \"@Baepo crews\",\r\n  },\r\n  {\r\n    name: \"task\",\r\n    category: \"Overview\",\r\n    title: \"Task Overview\",\r\n    sub_info: \"@Baepo crews\",\r\n  },\r\n  {\r\n    name: \"eda\",\r\n    category: \"Pre-stage\",\r\n    title: \"Data EDA\",\r\n    sub_info: \"@someone\",\r\n  },\r\n  {\r\n    name: \"model\",\r\n    category: \"Modeling\",\r\n    title: \"Model & Analysis\",\r\n    sub_info: \"@someone\",\r\n  },\r\n];\r\n\r\nexport default MenuLists;\r\n","import React from \"react\";\r\nimport \"./Home.css\";\r\nimport MenuItem from \"./MenuItem\";\r\nimport HoverItem from \"./HoverItem\";\r\nimport MenuLists from \"./MenuLists\";\r\n\r\nconst Home = () => {\r\n  // 메뉴 객체 리스트를 불러와서 컴포넌트화하고, 배열에 저장한다.\r\n  let MenuComponents = MenuLists.map((menu, index) => (\r\n    <li className=\"menu__item\" key={index}>\r\n      <MenuItem\r\n        name={menu.name}\r\n        category={menu.category}\r\n        title={menu.title}\r\n        sub_info={menu.sub_info}\r\n      />\r\n    </li>\r\n  ));\r\n  // 두 번째에 hover item이 들어갈 예정이므로 추가해준다.\r\n  MenuComponents.splice(\r\n    1,\r\n    0,\r\n    <li className=\"menu__item bg_blue\" key={-1}>\r\n      <HoverItem />\r\n    </li>\r\n  );\r\n\r\n  return <ul className=\"menu__items\">{MenuComponents}</ul>;\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\n// 모델 score와 두 개의 플롯을 띄운다.\r\nconst Analysis = (accuracy, auroc, lgbm_plot, zero_one) => {\r\n  console.log(accuracy);\r\n  console.log(auroc);\r\n  console.log(lgbm_plot);\r\n  console.log(zero_one);\r\n  return <span>This is Analysis!</span>;\r\n};\r\n\r\nexport default Analysis;\r\n","import React from \"react\";\r\nimport \"./Crews.css\";\r\n\r\nconst Crews = () => {\r\n  return <span>This is Crews!</span>;\r\n};\r\n\r\nexport default Crews;\r\n","import React from \"react\";\r\n\r\nconst Eda = () => {\r\n  return <span>This is EDA!</span>;\r\n};\r\n\r\nexport default Eda;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport dotenv from \"dotenv\";\r\n// import * as Papa from \"papaparse\";\r\nimport \"./Model.css\";\r\nimport { Analysis } from \"../../pages\";\r\ndotenv.config();\r\n\r\nclass Model extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      inputFile: undefined,\r\n      infScore: undefined,\r\n      isLoading: false,\r\n      // converted: \"\",\r\n    };\r\n    // this.convertCSVtoString = this.convertCSVtoString.bind(this);\r\n    this.modelInference = this.modelInference.bind(this);\r\n    this.getModelScore = this.getModelScore.bind(this);\r\n  }\r\n\r\n  getModelScore = async () => {\r\n    const { inputFile } = this.state;\r\n    const score = await axios.post(\r\n      process.env.REACT_APP_SERVER + \"/inference\",\r\n      {\r\n        params: {\r\n          data: inputFile,\r\n        },\r\n      }\r\n    );\r\n    this.setState({ infScore: score });\r\n  };\r\n\r\n  modelInference() {\r\n    // model inference하고 결과 받아오기\r\n    const { inputFile } = this.state;\r\n    if (inputFile === undefined) {\r\n      alert(\"You forgot data!🤭\"); // input없이 화면이 넘어오면 alert\r\n    } else {\r\n      this.setState({ isLoading: true }); // isLoading state를 true하며 로딩화면으로 렌더링\r\n      this.getModelScore(); // 모델 서버와 통신(서버 내에 raw 데이터 생성, 플롯을 response로 받는다.)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, infScore } = this.state;\r\n    console.log(\"rendering....\"); // render function이 call된 것을 확인\r\n\r\n    // state가 변경되면 rendering이 다시 일어난다.\r\n    // csv file input을 받으면 button onclick 콜백함수로 modelInference가 실행되고\r\n    // isLoading state가 true가 되며 로딩화면이 뜬다.\r\n    if (isLoading === false) {\r\n      return (\r\n        <div className=\"file_upload\">\r\n          <label className=\"file_label\" htmlFor=\"file\">\r\n            Test Data Input(CSV file)\r\n          </label>\r\n          <input\r\n            id=\"file\"\r\n            className=\"file_input\"\r\n            type=\"file\"\r\n            accept=\".csv\"\r\n            onChange={(event) => {\r\n              this.setState({\r\n                inputFile: event.target.files[0],\r\n              });\r\n            }}\r\n          />\r\n          <button onClick={this.modelInference}>Inference🔎</button>\r\n        </div>\r\n      );\r\n    } else {\r\n      // inference 결과를 받기 전까지 로딩화면을 띄운다.\r\n      if (infScore === undefined) {\r\n        return <div>Loading...</div>;\r\n      } else {\r\n        // inference 결과로 받아온 모델 score와 플롯 두개를 props로 넘겨주고,\r\n        // analysis 컴포넌트에서 보여준다.\r\n        console.log(this.state.infScore);\r\n        const {\r\n          prediction,\r\n          accuracy_score,\r\n          roc_auc_score,\r\n          lgbm_plot_importance,\r\n          zero_one_distribution,\r\n        } = this.state.infScore;\r\n        return (\r\n          <Analysis\r\n            accuracy={accuracy_score}\r\n            auroc={roc_auc_score}\r\n            lgbm_plot={lgbm_plot_importance}\r\n            zero_one={zero_one_distribution}\r\n          />\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Model;\r\n\r\n// csv를 string으로 파싱하고 converted state를 업데이트한다.\r\n// convertCSVtoString() {\r\n//   const { inputFile } = this.state;\r\n//   // console.log(inputFile);\r\n//   if (inputFile === undefined) {\r\n//     alert(\"You forgot data!🤭\");\r\n//   } else {\r\n//     // csv를 파싱하고 객체에서 데이터만 받아와서 string화 한다.\r\n//     Papa.parse(inputFile, {\r\n//       complete: (results) => {\r\n//         this.setState({ converted: results.data.slice(1).toString() });\r\n//       },\r\n//     });\r\n//   }\r\n// }\r\n","import React from \"react\";\r\n// import { Link, Route } from \"react-router-dom\";\r\n\r\nconst Task = (props) => {\r\n  console.log(props);\r\n  return <span>This is Task!</span>;\r\n};\r\nexport default Task;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Navigation from \"./components/Navigation\";\r\nimport { Home, Analysis, Crews, Eda, Model, Task } from \"./pages\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Navigation />\r\n      <div className=\"container\">\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/crews\" component={Crews} />\r\n          <Route path=\"/task\" component={Task} />\r\n          <Route path=\"/eda\" component={Eda} />\r\n          <Route path=\"/model\" component={Model} />\r\n          <Route path=\"/analysis\" component={Analysis} />\r\n          {/* Link에서 라우터를 찾을 때, 매칭되는 것이 없다면 Home으로 돌아오게 설정함. 이후에 여유가 되면 page not found도 구현하면 될 듯! */}\r\n          <Redirect path=\"*\" to=\"/\" />\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}