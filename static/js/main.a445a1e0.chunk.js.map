{"version":3,"sources":["components/Navigation/Navigation.js","routes/Home/MenuItem.js","routes/Home/HoverItem.js","routes/Home/MenuLists.js","routes/Home/Home.js","routes/Analysis/Analysis.js","routes/Crews/Crews.js","routes/Eda/Eda.js","routes/Model/Model.js","routes/Task/Task.js","App.js","index.js"],"names":["Navigation","className","to","href","target","MenuItem","name","category","title","sub_info","HoverItem","MenuLists","Home","MenuComponents","map","menu","index","splice","Analysis","Crews","Eda","Model","props","state","inputFile","undefined","infResult","isLoading","convertCSVtoString","bind","getModelInference","this","alert","Papa","complete","results","setState","converted","data","slice","toString","setTimeout","console","log","type","accept","onChange","event","files","onClick","React","Component","Task","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a445a1e0.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { BsArrowUpRight } from \"react-icons/bs\";\nimport \"./Navigation.css\";\n\nconst Navigation = () => {\n  return (\n    <nav className=\"nav\">\n      <Link to=\"/\" className=\"nav__home\">\n        Team Baepo\n      </Link>\n      <div className=\"nav__items\">\n        <Link to=\"/crews\" className=\"nav__crews\">\n          Crews\n          <BsArrowUpRight className=\"nav__arrow\"></BsArrowUpRight>\n        </Link>\n        <Link to=\"/model\" className=\"nav__model\">\n          Model\n          <BsArrowUpRight className=\"nav__arrow\"></BsArrowUpRight>\n        </Link>\n        <a\n          href=\"https://boostcamp.connect.or.kr/program_ai.html\"\n          className=\"nav__bcaitech\"\n          target=\"blank\"\n        >\n          boostcamp\n          <BsArrowUpRight className=\"nav__arrow\"></BsArrowUpRight>\n        </a>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","// 메뉴의 항목을 구성하는 컴포넌트입니다.\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst MenuItem = ({ name, category, title, sub_info }) => {\n  return (\n    <Link to={`/${name}`} className={`menu__${name}`}>\n      <em className=\"category\">{category}</em>\n      <div className=\"title\">{title}</div>\n      <div className=\"sub_info\">{sub_info}</div>\n    </Link>\n  );\n};\n\nexport default MenuItem;\n","// mouse hover 이벤트가 있는 메뉴 컴포넌트입니다.\n// hover 이벤트 컴포넌트가 또 필요할 경우 좀더 재사용성을 고려하여 리팩토링하면 될 것 같습니다.\nimport React from \"react\";\n\nconst HoverItem = () => {\n  return (\n    <div className=\"menu__about\">\n      <div className=\"title ft_white\">About us</div>\n      <div className=\"box_info\">\n        <em className=\"category ft_white ft_bold\">Team Baepo는?</em>\n        <p className=\"hover_text\">\n          저희는 boostcamp AI Tech 1기\n          <br />\n          Team Baepo 입니다🔥\n          <br />\n          P stage 4 DKT task를 진행하면서 서비스화 한다는\n          <br />\n          마음가짐으로 프로젝트를 진행했습니다🌱\n          <br />\n          프로젝트의 상세한 내용은 파트별로 나누어 <br />\n          담아보았습니다🙌🏼\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default HoverItem;\n","// 메뉴로 구성될 항목들을 모아둔 배열입니다.\nconst MenuLists = [\n  {\n    name: \"crews\",\n    category: \"Introduction\",\n    title: \"Crew Intro\",\n    sub_info: \"@Baepo crews\",\n  },\n  {\n    name: \"task\",\n    category: \"Overview\",\n    title: \"Task Overview\",\n    sub_info: \"@Baepo crews\",\n  },\n  {\n    name: \"eda\",\n    category: \"Pre-stage\",\n    title: \"Data EDA\",\n    sub_info: \"@someone\",\n  },\n  {\n    name: \"model\",\n    category: \"Modeling\",\n    title: \"Model Inference\",\n    sub_info: \"@someone\",\n  },\n  {\n    name: \"analysis\",\n    category: \"Post-stage\",\n    title: \"Result Analysis\",\n    sub_info: \"@someone\",\n  },\n];\n\nexport default MenuLists;\n","import React from \"react\";\nimport \"./Home.css\";\nimport MenuItem from \"./MenuItem\";\nimport HoverItem from \"./HoverItem\";\nimport MenuLists from \"./MenuLists\";\n\nconst Home = () => {\n  // 메뉴 객체 리스트를 불러와서 컴포넌트화하고, 배열에 저장한다.\n  let MenuComponents = MenuLists.map((menu, index) => (\n    <li className=\"menu__item\" key={index}>\n      <MenuItem\n        name={menu.name}\n        category={menu.category}\n        title={menu.title}\n        sub_info={menu.sub_info}\n      />\n    </li>\n  ));\n  // 두 번째에 hover item이 들어갈 예정이므로 추가해준다.\n  MenuComponents.splice(\n    1,\n    0,\n    <li className=\"menu__item bg_blue\" key={-1}>\n      <HoverItem />\n    </li>\n  );\n\n  return <ul className=\"menu__items\">{MenuComponents}</ul>;\n};\n\nexport default Home;\n","import React from \"react\";\n\nconst Analysis = () => {\n  return <span>This is Analysis!</span>;\n};\n\nexport default Analysis;\n","import React from \"react\";\nimport \"./Crews.css\";\n\nconst Crews = () => {\n  return <span>This is Crews!</span>;\n};\n\nexport default Crews;\n","import React from \"react\";\n\nconst Eda = () => {\n  return <span>This is EDA!</span>;\n};\n\nexport default Eda;\n","import React from \"react\";\nimport axios from \"axios\";\nimport * as Papa from \"papaparse\";\nimport \"./Model.css\";\n\nclass Model extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputFile: undefined,\n      infResult: undefined,\n      isLoading: false,\n      // converted: \"\",\n    };\n    this.convertCSVtoString = this.convertCSVtoString.bind(this);\n    this.getModelInference = this.getModelInference.bind(this);\n  }\n\n  // csv를 string으로 파싱하고 converted state를 업데이트한다.\n  convertCSVtoString() {\n    const { inputFile } = this.state;\n    // console.log(inputFile);\n    if (inputFile === undefined) {\n      alert(\"You forgot data!🤭\");\n    } else {\n      // csv를 파싱하고 객체에서 데이터만 받아와서 string화 한다.\n      Papa.parse(inputFile, {\n        complete: (results) => {\n          this.setState({ converted: results.data.slice(1).toString() });\n        },\n      });\n    }\n  }\n\n  getModelInference() {\n    // 로딩화면으로 전환하기 위해 isLoading state를 true 한다.\n    this.setState({ isLoading: true });\n\n    // model inference하고 결과 받아오기\n    const { inputFile } = this.state;\n    if (inputFile === undefined) {\n      // input없이 화면이 넘어오면 alert\n      alert(\"You forgot data!🤭\");\n    } else {\n      // 서버 통신\n      setTimeout(() => {\n        console.log(\"3초 뒤에 서버에서 값 받음!!\");\n        this.setState({ infResult: 0.8498 });\n      }, 3000);\n      // csv를 파싱하고 객체에서 데이터만 받아와서 string화 한다.\n      // Papa.parse(inputFile, {\n      //   complete: (results) => {\n      //     this.setState({ converted: results.data.slice(1).toString() });\n      //   },\n      // });\n    }\n  }\n\n  render() {\n    const { isLoading, infResult } = this.state;\n    console.log(\"rendering....\"); // render function이 call된 것을 확인\n\n    // state가 변경되면 rendering이 다시 일어난다.\n    // csv file input을 받으면 button onclick 콜백함수에서 getModelInference가 실행되고\n    // isLoading state가 true가 되며 로딩화면이 뜬다.\n    if (isLoading === false) {\n      return (\n        <div className=\"file_upload\">\n          <label>Test Data Input(CSV file)</label>\n          <input\n            type=\"file\"\n            accept=\".csv\"\n            onChange={(event) => {\n              this.setState({\n                inputFile: event.target.files[0],\n              });\n            }}\n          />\n          <button onClick={this.getModelInference}>Inference🔎</button>\n        </div>\n      );\n    } else {\n      // isLoading이 true인데 infResult가 undefined이면 로딩화면에서 대기한다.\n      if (infResult === undefined) {\n        return <div>Loading...</div>;\n      } else {\n        return <div>score!!</div>;\n      }\n    }\n  }\n}\n\nexport default Model;\n","import React from \"react\";\n// import { Link, Route } from \"react-router-dom\";\n\nconst Task = (props) => {\n  console.log(props);\n  return <span>This is Task!</span>;\n};\nexport default Task;\n","import React from \"react\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Navigation from \"./components/Navigation\";\nimport { Home, Analysis, Crews, Eda, Model, Task } from \"./pages\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Navigation />\n      <div className=\"container\">\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/crews\" component={Crews} />\n          <Route path=\"/task\" component={Task} />\n          <Route path=\"/eda\" component={Eda} />\n          <Route path=\"/model\" component={Model} />\n          <Route path=\"/analysis\" component={Analysis} />\n          {/* Link에서 라우터를 찾을 때, 매칭되는 것이 없다면 Home으로 돌아오게 설정함. 이후에 여유가 되면 page not found도 구현하면 될 듯! */}\n          <Redirect path=\"*\" to=\"/\" />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}