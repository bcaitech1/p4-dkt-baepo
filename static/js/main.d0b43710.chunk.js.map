{"version":3,"sources":["components/Navigation/Navigation.js","routes/Home/MenuItem.js","routes/Home/HoverItem.js","routes/Home/MenuLists.js","routes/Home/Home.js","routes/Analysis/Analysis.js","routes/Crews/Crews.js","routes/Eda/Eda.js","routes/Model/Model.js","routes/Task/Task.js","App.js","index.js"],"names":["Navigation","className","to","href","target","MenuItem","name","category","title","sub_info","HoverItem","MenuLists","Home","MenuComponents","map","menu","index","splice","Analysis","accuracy","auroc","lgbm_plot","zero_one","console","log","toFixed","src","process","alt","Crews","Eda","dotenv","config","Model","props","getModelScore","a","inputFile","state","formData","FormData","append","axios","post","headers","response","setState","infScore","data","undefined","isLoading","modelInference","bind","this","alert","htmlFor","id","type","accept","onChange","event","files","onClick","Spinner","animation","variant","accuracy_score","prediction","roc_auc_score","lgbm_plot_importance","zero_one_distribution","React","Component","Task","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0b43710.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { BsArrowUpRight } from \"react-icons/bs\";\nimport \"./Navigation.css\";\n\nconst Navigation = () => {\n  return (\n    <nav className=\"nav\">\n      <Link to=\"/\" className=\"nav__home\">\n        Team Baepo\n      </Link>\n      <div className=\"nav__items\">\n        <Link to=\"/crews\" className=\"nav__crews\">\n          Crews\n          <BsArrowUpRight className=\"nav__arrow\"></BsArrowUpRight>\n        </Link>\n        <Link to=\"/model\" className=\"nav__model\">\n          Model\n          <BsArrowUpRight className=\"nav__arrow\"></BsArrowUpRight>\n        </Link>\n        <a\n          href=\"https://boostcamp.connect.or.kr/program_ai.html\"\n          className=\"nav__bcaitech\"\n          target=\"blank\"\n        >\n          boostcamp\n          <BsArrowUpRight className=\"nav__arrow\"></BsArrowUpRight>\n        </a>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","// 메뉴의 항목을 구성하는 컴포넌트입니다.\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst MenuItem = ({ name, category, title, sub_info }) => {\n  return (\n    <Link to={`/${name}`} className={`menu__${name}`}>\n      <em className=\"category\">{category}</em>\n      <div className=\"title\">{title}</div>\n      <div className=\"sub_info\">{sub_info}</div>\n    </Link>\n  );\n};\n\nexport default MenuItem;\n","// mouse hover 이벤트가 있는 메뉴 컴포넌트입니다.\n// hover 이벤트 컴포넌트가 또 필요할 경우 좀더 재사용성을 고려하여 리팩토링하면 될 것 같습니다.\nimport React from \"react\";\n\nconst HoverItem = () => {\n  return (\n    <div className=\"menu__about\">\n      <div className=\"title ft_white\">About us</div>\n      <div className=\"box_info\">\n        <em className=\"category ft_white ft_bold\">Team Baepo는?</em>\n        <p className=\"hover_text\">\n          저희는 boostcamp AI Tech 1기\n          <br />\n          Team Baepo 입니다🔥\n          <br />\n          P stage 4 DKT task를 진행하면서 서비스화 한다는\n          <br />\n          마음가짐으로 프로젝트를 진행했습니다🌱\n          <br />\n          프로젝트의 상세한 내용은 파트별로 나누어 <br />\n          담아보았습니다🙌🏼\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default HoverItem;\n","// 메뉴로 구성될 항목들을 모아둔 배열입니다.\nconst MenuLists = [\n  {\n    name: \"crews\",\n    category: \"Introduction\",\n    title: \"Crew Intro\",\n    sub_info: \"@Baepo crews\",\n  },\n  {\n    name: \"task\",\n    category: \"Overview\",\n    title: \"Task Overview\",\n    sub_info: \"@Baepo crews\",\n  },\n  {\n    name: \"eda\",\n    category: \"Pre-stage\",\n    title: \"Data EDA\",\n    sub_info: \"@someone\",\n  },\n  {\n    name: \"model\",\n    category: \"Modeling\",\n    title: \"Model & Analysis\",\n    sub_info: \"@someone\",\n  },\n];\n\nexport default MenuLists;\n","import React from \"react\";\nimport \"./Home.css\";\nimport MenuItem from \"./MenuItem\";\nimport HoverItem from \"./HoverItem\";\nimport MenuLists from \"./MenuLists\";\n\nconst Home = () => {\n  // 메뉴 객체 리스트를 불러와서 컴포넌트화하고, 배열에 저장한다.\n  let MenuComponents = MenuLists.map((menu, index) => (\n    <li className=\"menu__item\" key={index}>\n      <MenuItem\n        name={menu.name}\n        category={menu.category}\n        title={menu.title}\n        sub_info={menu.sub_info}\n      />\n    </li>\n  ));\n  // 두 번째에 hover item이 들어갈 예정이므로 추가해준다.\n  MenuComponents.splice(\n    1,\n    0,\n    <li className=\"menu__item bg_blue\" key={-1}>\n      <HoverItem />\n    </li>\n  );\n\n  return <ul className=\"menu__items\">{MenuComponents}</ul>;\n};\n\nexport default Home;\n","import React from \"react\";\nimport \"./Analysis.css\";\n\n// 모델 score와 두 개의 플롯을 띄운다.\nconst Analysis = ({ accuracy, auroc, lgbm_plot, zero_one }) => {\n  console.log(\"1: \" + accuracy);\n  console.log(\"2: \" + auroc);\n  console.log(\"3: \" + lgbm_plot);\n  console.log(\"4: \" + zero_one);\n  return (\n    <div className=\"analysis__container\">\n      <div className=\"analysis__scores\">\n        <span className=\"analysis__score\">Accuracy: {accuracy.toFixed(4)}</span>\n        <span className=\"analysis__score\">AUROC: {auroc.toFixed(4)}</span>\n      </div>\n      <div className=\"analysis__plots\">\n        <img\n          className=\"lgbm_plot\"\n          src={`${process.env.REACT_APP_SERVER}/static/${lgbm_plot}`}\n          alt=\"lgbm_plot\"\n        />\n        <img\n          className=\"zero_one\"\n          src={`${process.env.REACT_APP_SERVER}/static/${zero_one}`}\n          alt=\"zero_one\"\n        />\n        <div>\n          학생들의 풀이가 전반적으로 1을 더 잘 맞추는 쪽으로 분포가 잘 형성된\n          것을 볼 수 있다.\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Analysis;\n","import React from \"react\";\nimport \"./Crews.css\";\n\nconst Crews = () => {\n  return <span>This is Crews!</span>;\n};\n\nexport default Crews;\n","import React from \"react\";\n\nconst Eda = () => {\n  return <span>This is EDA!</span>;\n};\n\nexport default Eda;\n","import React from \"react\";\nimport axios from \"axios\";\nimport dotenv from \"dotenv\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./Model.css\";\nimport { Analysis } from \"../../pages\";\ndotenv.config();\n\nclass Model extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputFile: undefined,\n      infScore: undefined,\n      isLoading: false,\n      // converted: \"\",\n    };\n    // this.convertCSVtoString = this.convertCSVtoString.bind(this);\n    this.modelInference = this.modelInference.bind(this);\n    this.getModelScore = this.getModelScore.bind(this);\n  }\n\n  getModelScore = async () => {\n    const { inputFile } = this.state;\n    let formData = new FormData();\n    formData.append(\"data\", inputFile);\n    try {\n      const response = await axios.post(\n        process.env.REACT_APP_SERVER + \"/inference\",\n        formData,\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        }\n      );\n      this.setState({ infScore: response.data });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  modelInference() {\n    // model inference하고 결과 받아오기\n    const { inputFile } = this.state;\n    if (inputFile === undefined) {\n      alert(\"You forgot data!🤭\"); // input없이 화면이 넘어오면 alert\n    } else {\n      this.setState({ isLoading: true }); // isLoading state를 true하며 로딩화면으로 렌더링\n      this.getModelScore(); // 모델 서버와 통신(서버 내에 raw 데이터 생성, 플롯을 response로 받는다.)\n    }\n  }\n\n  render() {\n    const { isLoading, infScore } = this.state;\n    // console.log(\"rendering....\"); // render function이 call된 것을 확인\n    // state가 변경되면 rendering이 다시 일어난다.\n    // csv file input을 받으면 button onclick 콜백함수로 modelInference가 실행되고\n    // isLoading state가 true가 되며 로딩화면이 뜬다.\n    if (isLoading === false) {\n      return (\n        <div className=\"file_upload\">\n          <label className=\"file_label\" htmlFor=\"file\">\n            📂Input file here(.csv)📂\n          </label>\n          <input\n            id=\"file\"\n            className=\"file_input\"\n            type=\"file\"\n            accept=\".csv\"\n            onChange={(event) => {\n              this.setState({\n                inputFile: event.target.files[0],\n              });\n            }}\n          />\n          <button onClick={this.modelInference}>Start Inference🔎</button>\n        </div>\n      );\n    } else {\n      // inference 결과를 받기 전까지 로딩화면을 띄운다.\n      if (infScore === undefined) {\n        return (\n          <div className=\"loading__container\">\n            <Spinner\n              className=\"loading__logo\"\n              animation=\"border\"\n              variant=\"primary\"\n            />\n          </div>\n        );\n      } else {\n        // inference 결과로 받아온 모델 score와 플롯 두개를 props로 넘겨주고,\n        // analysis 컴포넌트에서 보여준다.\n        const {\n          prediction,\n          accuracy_score,\n          roc_auc_score,\n          lgbm_plot_importance,\n          zero_one_distribution,\n        } = this.state.infScore;\n        return (\n          <Analysis\n            accuracy={accuracy_score}\n            auroc={roc_auc_score}\n            lgbm_plot={lgbm_plot_importance}\n            zero_one={zero_one_distribution}\n          />\n        );\n      }\n    }\n  }\n}\n\nexport default Model;\n\n// csv를 string으로 파싱하고 converted state를 업데이트한다.\n// convertCSVtoString() {\n//   const { inputFile } = this.state;\n//   // console.log(inputFile);\n//   if (inputFile === undefined) {\n//     alert(\"You forgot data!🤭\");\n//   } else {\n//     // csv를 파싱하고 객체에서 데이터만 받아와서 string화 한다.\n//     Papa.parse(inputFile, {\n//       complete: (results) => {\n//         this.setState({ converted: results.data.slice(1).toString() });\n//       },\n//     });\n//   }\n// }\n","import React from \"react\";\n// import { Link, Route } from \"react-router-dom\";\n\nconst Task = (props) => {\n  console.log(props);\n  return <span>This is Task!</span>;\n};\nexport default Task;\n","import React from \"react\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Navigation from \"./components/Navigation\";\nimport { Home, Analysis, Crews, Eda, Model, Task } from \"./pages\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Navigation />\n      <div className=\"container\">\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/crews\" component={Crews} />\n          <Route path=\"/task\" component={Task} />\n          <Route path=\"/eda\" component={Eda} />\n          <Route path=\"/model\" component={Model} />\n          <Route path=\"/analysis\" component={Analysis} />\n          {/* Link에서 라우터를 찾을 때, 매칭되는 것이 없다면 Home으로 돌아오게 설정함. 이후에 여유가 되면 page not found도 구현하면 될 듯! */}\n          <Redirect path=\"*\" to=\"/\" />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}